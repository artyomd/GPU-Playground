#pragma once

#include <tiny_gltf.h>

#include <map>
#include <string>
#include <vector>

namespace geometry {
struct ExpectedValues {
  std::vector<int> element_count;
  std::vector<int> element_type;
  int target;
};
static const std::map<std::string, ExpectedValues> kPrimitiveTypes{
    {"INDICES",
     {{TINYGLTF_TYPE_SCALAR},
      {TINYGLTF_COMPONENT_TYPE_UNSIGNED_BYTE,
       TINYGLTF_COMPONENT_TYPE_UNSIGNED_SHORT,
       TINYGLTF_COMPONENT_TYPE_UNSIGNED_INT},
      TINYGLTF_TARGET_ELEMENT_ARRAY_BUFFER}},
    {"POSITION",
     {{TINYGLTF_TYPE_VEC3},
      {TINYGLTF_COMPONENT_TYPE_FLOAT},
      TINYGLTF_TARGET_ARRAY_BUFFER}},
    {"NORMAL",
     {{TINYGLTF_TYPE_VEC3},
      {TINYGLTF_COMPONENT_TYPE_FLOAT},
      TINYGLTF_TARGET_ARRAY_BUFFER}},
    {"TANGENT",
     {{TINYGLTF_TYPE_VEC4},
      {TINYGLTF_COMPONENT_TYPE_FLOAT},
      TINYGLTF_TARGET_ARRAY_BUFFER}},
    {"TEXCOORD_0",
     {{TINYGLTF_TYPE_VEC2},
      {TINYGLTF_COMPONENT_TYPE_FLOAT, TINYGLTF_COMPONENT_TYPE_UNSIGNED_BYTE,
       TINYGLTF_COMPONENT_TYPE_UNSIGNED_SHORT},
      TINYGLTF_TARGET_ARRAY_BUFFER}},
    {"TEXCOORD_1",
     {{TINYGLTF_TYPE_VEC2},
      {TINYGLTF_COMPONENT_TYPE_FLOAT, TINYGLTF_COMPONENT_TYPE_UNSIGNED_BYTE,
       TINYGLTF_COMPONENT_TYPE_UNSIGNED_SHORT},
      TINYGLTF_TARGET_ARRAY_BUFFER}},
    {"COLOR_0",
     {{TINYGLTF_TYPE_VEC3, TINYGLTF_TYPE_VEC4},
      {TINYGLTF_COMPONENT_TYPE_FLOAT, TINYGLTF_COMPONENT_TYPE_UNSIGNED_BYTE,
       TINYGLTF_COMPONENT_TYPE_UNSIGNED_SHORT},
      TINYGLTF_TARGET_ARRAY_BUFFER}},
    {"JOINTS_0",
     {{TINYGLTF_TYPE_VEC4},
      {TINYGLTF_COMPONENT_TYPE_UNSIGNED_BYTE,
       TINYGLTF_COMPONENT_TYPE_UNSIGNED_SHORT},
      TINYGLTF_TARGET_ARRAY_BUFFER}},
    {"WEIGHTS_0",
     {{TINYGLTF_TYPE_VEC4},
      {TINYGLTF_COMPONENT_TYPE_FLOAT, TINYGLTF_COMPONENT_TYPE_UNSIGNED_BYTE,
       TINYGLTF_COMPONENT_TYPE_UNSIGNED_SHORT},
      TINYGLTF_TARGET_ARRAY_BUFFER}}};
}  // namespace geometry
